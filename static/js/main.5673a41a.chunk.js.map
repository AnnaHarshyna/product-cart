{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","addProduct","product","includes","setState","prevState","removeProduct","filter","selectedproduct","clearProductCart","this","className","length","join","type","onClick","map","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAGMA,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAoFaC,E,4MAhFbC,MAAQ,CACNC,cAAe,I,EAGjBC,WAAa,SAACC,GACP,EAAKH,MAAMC,cAAcG,SAASD,IACrC,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAC1BL,cAAc,GAAD,mBAAMK,EAAUL,eAAhB,CAA+BE,S,EAKlDI,cAAgB,SAACJ,GACf,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAC1BL,cAAeK,EAAUL,cACtBO,QAAO,SAAAC,GAAe,OAAIA,IAAoBN,U,EAIrDO,iBAAmB,WACjB,EAAKL,UAAS,iBAAO,CACnBJ,cAAe,Q,4CAInB,WAAU,IAAD,OACCA,EAAkBU,KAAKX,MAAvBC,cAER,OACE,sBAAKW,UAAU,MAAf,UACE,6BACGX,EAAcY,OAAS,EAAvB,0BACsBZ,EAAca,KAAK,OACtC,sBAGN,wBACEF,UAAU,uBACVG,KAAK,SACLC,QAASL,KAAKD,iBAHhB,mBAQA,oBAAIE,UAAU,cAAd,SACGd,EAAgBmB,KAAI,SAAAd,GAAO,OAC1B,sBACES,UAAS,wBAAmBX,EAAcG,SAASD,GAC/C,WACA,IAHN,UAOE,6BAAKA,IAEL,gCACA,wBACIY,KAAK,SACLH,UAAU,qBACVI,QAAS,kBAAM,EAAKd,WAAWC,IAHnC,iBAQE,wBACEY,KAAK,SACLH,UAAU,wBACVI,QAAS,kBAAM,EAAKT,cAAcJ,IAHpC,yBAbGA,e,GApDDe,IAAMC,WCJTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5673a41a.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: '',\n  }\n\n  addProduct = (product) => {\n    if (!this.state.selectedGoods.includes(product)) {\n      this.setState(prevState => ({\n        selectedGoods: [...prevState.selectedGoods, product],\n      }));\n    }\n  }\n\n  removeProduct = (product) => {\n    this.setState(prevState => ({\n      selectedGoods: prevState.selectedGoods\n        .filter(selectedproduct => selectedproduct !== product),\n    }));\n  }\n\n  clearProductCart = () => {\n    this.setState(() => ({\n      selectedGoods: [],\n    }));\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1>\n          {selectedGoods.length > 0\n            ? `Selected goods: ${selectedGoods.join(', ')}`\n            : 'No goods selected'}\n        </h1>\n\n        <button\n          className=\"button button__clear\"\n          type=\"button\"\n          onClick={this.clearProductCart}\n        >\n          Clear\n        </button>\n\n        <ul className=\"goods__list\">\n          {goodsFromServer.map(product => (\n            <div\n              className={`list__product ${selectedGoods.includes(product)\n                ? 'selected'\n                : ''\n              }`}\n              key={product}\n            >\n              <li>{product}</li>\n\n              <div>\n              <button\n                  type=\"button\"\n                  className=\"button button__add\"\n                  onClick={() => this.addProduct(product)}\n                >\n                  Add\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"button button__remove\"\n                  onClick={() => this.removeProduct(product)}\n                >\n                  Remove\n                </button>\n              </div>\n            </div>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}